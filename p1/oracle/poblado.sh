#!/bin/bash
# Script: docker_oracle_tables.sh
# Objetivo: Ingresar al contenedor p1-oracle-1 y crear (si no existe) la tabla MY_TABLE
#           para luego poblarla con datos de ejemplo, de forma idempotente.
# Se utiliza sqlplus para conectarse a Oracle usando el usuario APP_USER definido en docker-compose.

CONTAINER_NAME="p1-oracle-1"
# Usamos el usuario de la aplicaci√≥n definido en docker-compose
ADMIN_USER="admin"
ADMIN_PASSWORD="admin"
# Connect string para Oracle XE (verifica que sea el correcto)
CONNECT_STRING="localhost:1521/XEPDB1"

echo "Ejecutando script dentro del contenedor '$CONTAINER_NAME' para crear y poblar tablas en Oracle..."

docker exec -it $CONTAINER_NAME bash -c "sqlplus -S ${ADMIN_USER}/${ADMIN_PASSWORD}@${CONNECT_STRING} <<EOF
SET SERVEROUTPUT ON
DECLARE
   table_count NUMBER;
BEGIN
   SELECT COUNT(*) INTO table_count FROM user_tables WHERE table_name = 'MY_TABLE';
   IF table_count = 0 THEN
      DBMS_OUTPUT.PUT_LINE('Creando tabla MY_TABLE...');
      EXECUTE IMMEDIATE 'CREATE TABLE MY_TABLE (
         ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
         NAME VARCHAR2(100),
         CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
         CONSTRAINT MY_TABLE_PK PRIMARY KEY (ID)
      )';
      DBMS_OUTPUT.PUT_LINE('Tabla MY_TABLE creada.');
   ELSE
      DBMS_OUTPUT.PUT_LINE('La tabla MY_TABLE ya existe.');
   END IF;
END;
/
DECLARE
   cnt NUMBER;
BEGIN
   SELECT COUNT(*) INTO cnt FROM MY_TABLE;
   IF cnt = 0 THEN
      DBMS_OUTPUT.PUT_LINE('Insertando datos de ejemplo en MY_TABLE...');
      EXECUTE IMMEDIATE 'INSERT INTO MY_TABLE (NAME) VALUES (''Sample Data'')';
      COMMIT;
      DBMS_OUTPUT.PUT_LINE('Datos insertados.');
   ELSE
      DBMS_OUTPUT.PUT_LINE('MY_TABLE ya contiene datos.');
   END IF;
END;
/
EXIT;
EOF"
echo "Script docker_oracle_tables.sh completado."
